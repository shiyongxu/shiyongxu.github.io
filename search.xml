<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SpringCloud 2</title>
      <link href="/2019/12/11/SpringCloud-2/"/>
      <url>/2019/12/11/SpringCloud-2/</url>
      
        <content type="html"><![CDATA[<p><strong>学习目标</strong></p><ul><li><p>能够使用Feign进行远程调用 </p></li><li><p>能够搭建Spring Cloud Gateway网关服务 </p></li><li><p>能够配置Spring Cloud Gateway路由过滤器 </p></li><li><p>能够编写Spring Cloud Gateway全局过滤器 </p></li><li><p>能够搭建Spring Cloud Confifig配置中心服务 </p></li><li><p>能够使用Spring Cloud Bus实时更新配置</p></li></ul><a id="more"></a><br><br><p><strong>复习</strong></p><ol><li><p>微服务的特点( 优缺点 ) 背诵</p></li><li><p>get/post练习</p></li><li><p>restTemplate</p><p>一个工程能调用另一个工程</p></li></ol><br><br><h2 id="1-Feign"><a href="#1-Feign" class="headerlink" title="1. Feign"></a>1. Feign</h2><p>Feign主要作用: 自动根据参数拼接http请求地址</p><p>原理: 底层是restTemplate+ribbon, 这样就写死了, 使用feign不需要再自己拼接url，拼接参数等等操作，一切都交给Feign去做。</p><br><br><p>####1.1 快速入门</p><ol><li><p>导入依赖</p><p>在consumer-demo消费者项目中添加依赖坐标</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-openfeign<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><ol start="2"><li><p>在ConsumerApplication引导类上添加注解, 开启Feign功能</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.gateway;</span><br><span class="line"><span class="keyword">package</span> com.itheima.consumer;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.loadbalancer.LoadBalanced;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.EnableFeignClients;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.client.RestTemplate;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableFeignClients</span><span class="comment">//开启feign功能</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ConsumerApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@LoadBalanced</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>需要加上@EnableDiscoveryClient, 来开启feign功能</p></blockquote><blockquote><p>Feign中已经自动集成了Ribbon负载均衡，因此不需要自己定义RestTemplate进行负载均衡的配置。 </p></blockquote><blockquote><p>@SpringBootApplication相当于这三个注解: </p><ul><li>@SpringBootApplication </li><li>@EnableDiscoveryClient </li><li>@EnableCircuitBreaker</li></ul></blockquote></li></ol><ol start="3"><li><p>在consumer-demo工程中编写Feign的客户端</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.consumer.client;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.consumer.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.openfeign.FeignClient;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"></span><br><span class="line"><span class="meta">@FeignClient</span>(<span class="string">"user-service"</span>)<span class="comment">//声明这是一个Feign客户端，同时通过 value 属性指定服务名称</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserClient</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/user/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryById</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span>Long id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>在consumer-demo工程中编写新的控制器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.consumer.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.itheima.consumer.client.UserClient;</span><br><span class="line"><span class="keyword">import</span> com.itheima.consumer.pojo.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PathVariable;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/cf"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerFeignController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserClient userClient;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">queryById</span><span class="params">(@PathVariable(<span class="string">"id"</span>)</span>Long id)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userClient.queryById(id);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><ol start="5"><li><p>启动测试 </p><p>访问: <a href="http://localhost:8080/cf/1" target="_blank" rel="noopener">http://localhost:8080/cf/1</a></p></li></ol><br><br><h4 id="1-2-Feign负载均衡及熔断"><a href="#1-2-Feign负载均衡及熔断" class="headerlink" title="1.2 Feign负载均衡及熔断"></a>1.2 Feign负载均衡及熔断</h4><p>可以Feign内置ribbon配置项和Hystrix熔断的Fallb配置</p><p>负载均衡, 服务熔断, 请求压缩, 日志级别 都可以通过配置项在Feign中开启使用</p><br><br><h2 id="2-Spring-Cloud-Geteway网关"><a href="#2-Spring-Cloud-Geteway网关" class="headerlink" title="2. Spring Cloud Geteway网关"></a>2. Spring Cloud Geteway网关</h2><p>网关的核心功能是: <strong>过滤和路由</strong></p><p>Spring Cloud Geteway的核心就是一系列的过滤器, 可以将客户端的请求转发到不同的微服务</p><h4 id="1-1-快速入门"><a href="#1-1-快速入门" class="headerlink" title="1.1 快速入门"></a>1.1 快速入门</h4><ol><li><p>导入依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>heima-springcloud<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itheima<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>heima-geteway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-gateway<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写feign启动引导类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.itheima.gateway;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.cloud.client.discovery.EnableDiscoveryClient;</span><br><span class="line"></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span><span class="comment">//开启服务注册与发现</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GatewayAppliacation</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(GatewayAppliacation<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>需要加上@EnableDiscoveryClient, 来开启feign功能</p></blockquote><blockquote><p>@SpringBootApplication相当于这三个注解: </p><ul><li>@SpringBootApplication </li><li>@EnableDiscoveryClient </li><li>@EnableCircuitBreaker</li></ul></blockquote></li><li><p>编写Application.yml配置类</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">10010</span></span><br><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">api-gateway</span></span><br><span class="line">  <span class="attr">cloud:</span></span><br><span class="line">    <span class="attr">gateway:</span></span><br><span class="line">      <span class="attr">routes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">id:</span> <span class="string">user-service-route</span>  <span class="comment">#路由id, 可以随意写</span></span><br><span class="line">        <span class="comment">#uri: http://127.0.0.1:9091  #代理的服务地址</span></span><br><span class="line">        <span class="attr">uri:</span> <span class="string">lb://user-service</span>  <span class="comment">#代理的服务地址, lb表示从eureka中获取具体服务</span></span><br><span class="line">        <span class="attr">predicates:</span> <span class="comment">#路由断言, 可以配置映射路径</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">Path=/user/**</span></span><br><span class="line">        <span class="comment">#- Path=/**</span></span><br><span class="line">        <span class="comment"># - Path=/api/user/**</span></span><br><span class="line">        <span class="attr">filters:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">PrefixPath=/user</span>  <span class="comment">#添加请求路径的前缀, 如果添加了需要修改一下路由断言</span></span><br><span class="line">        <span class="comment">#StripPrefix=1 http://localhost:10010/api/user/8 --》http://localhost:9091/user/8</span></span><br><span class="line">        <span class="comment">#StripPrefix=2 http://localhost:10010/api/user/8 --》http://localhost:9091/8</span></span><br><span class="line">        <span class="comment">#- StripPrefix=1  #表示过滤一个路径, 2表示过滤两个路径, 以此类推</span></span><br><span class="line"><span class="attr">eureka:</span></span><br><span class="line">  <span class="attr">client:</span></span><br><span class="line">    <span class="attr">service-url:</span></span><br><span class="line">      <span class="attr">defaultZone:</span> <span class="string">http://127.0.0.1:10086/eureka</span></span><br><span class="line">  <span class="attr">instance:</span></span><br><span class="line">    <span class="attr">prefer-ip-address:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>启动测试</p><p>访问：<a href="http://localhost:10010/user/8" target="_blank" rel="noopener">http://localhost:10010/user/8</a> </p></li></ol><br><br><h4 id="1-2-过滤器"><a href="#1-2-过滤器" class="headerlink" title="1.2 过滤器"></a>1.2 过滤器</h4><h2 id="3-Spring-Cloud-Config"><a href="#3-Spring-Cloud-Config" class="headerlink" title="3.  Spring Cloud Config"></a>3.  Spring Cloud Config</h2><p>支持把配置文件放在本地, 或GitHub, 码云</p><p>Spring Cloud Config的作用: 可以通过修改在git仓库中的配置文件实现其他所有微服务的配置文件的修改, 进行集中式修改配置文件</p><br><br>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringCloud入门</title>
      <link href="/2019/12/09/SpringCloud%E5%85%A5%E9%97%A8/"/>
      <url>/2019/12/09/SpringCloud%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p><strong>今日学习目标 :</strong></p><ul><li>能够使用RestTemplate发送请求</li><li>能够说出SpringCloud的作用</li><li>能够搭建Eureka注册中心</li><li>能够使用Robbon负载均衡</li><li>能够使用Hystrix熔断器</li></ul><br><br><a id="more"></a><h2 id="1-系统架构"><a href="#1-系统架构" class="headerlink" title="1. 系统架构"></a>1. 系统架构</h2><h4 id="1-1-微服务架构"><a href="#1-1-微服务架构" class="headerlink" title="1.1 微服务架构"></a>1.1 微服务架构</h4><p>概念: 是一套使用小服务或者单一业务来开发单个应用的方式或途径</p><p>特点: </p><ul><li>职责更单一</li><li>服务之间相互独立, 互不干扰</li><li>总是松耦合</li><li>面向服务(对外暴露REST api)</li></ul><blockquote><p>与使用ESB ( 企业服务总线  ) 的SOA架构的区别: 微服务架构没有使用ESB, 但有服务治理注册中心, 业务粒度小</p></blockquote><br><br><h4 id="1-2-服务调用方式"><a href="#1-2-服务调用方式" class="headerlink" title="1.2 服务调用方式"></a>1.2 服务调用方式</h4><ul><li><p>RPC: 基于socket, 速度快, 效率高;</p><blockquote><p>常见的应用代表: webservice, dubbo</p></blockquote></li><li><p>HTTP: 基于TCP, 封装比较臃肿, 对服务和调用方没有任何技术,语言的限定, 自由灵活;  现在客户端浏览器和服务器端通信基本都采用http协议</p><blockquote><p>常见的应用代表: RESTful风格, SpringCloud</p></blockquote></li></ul><br><br><h4 id="1-3-Http客户端服务"><a href="#1-3-Http客户端服务" class="headerlink" title="1.3 Http客户端服务"></a>1.3 Http客户端服务</h4><p>一般有三种Http客户端</p><ul><li>HttpClient</li><li>OKHttp</li><li>URLConnection</li></ul><br><br><p>##2. RestTemplate</p><p>Spring对http的客户端进行封装, 提供了一个模板工具类叫RestTemplate, 并且实现了对象与json的序列化和反序列化</p><blockquote><p>RestTemplate作用: 发请求 ; 请求另一个方法</p></blockquote><p>请求方式:</p><ul><li>get</li></ul><ul><li><p>post</p><ul><li>参数有@RequestBody</li><li>参数没有@RequestBody</li></ul></li></ul><br><br><h2 id="3-Spring-Cloud"><a href="#3-Spring-Cloud" class="headerlink" title="3. Spring Cloud"></a>3. Spring Cloud</h2><p>####3.1  Spring cloud介绍</p><p>Spring boot是Spring的一套快速配置脚手架, 可以基于spring boot 快速开发单个微服务</p><p>Spring cloud是基于Spring boot的, 为了解决微服务体系开发中的架构问题</p><p>官网地址：<a href="https://spring.io/projects/spring-cloud" target="_blank" rel="noopener">http://projects.spring.io/spring-cloud</a></p><blockquote><p>例如: 微服务中请求路径是固定的( <a href="http://localhost/user/1" target="_blank" rel="noopener">http://localhost/user/1</a>) 如果采用了负载均衡之后, 客户端不能只访问同一台服务器, 应该轮询访问, 这是就要采用eureka注册中心提供不同的地址</p></blockquote><p>Spring cloud不是具体的技术, 而是很多组件的集合, 整合的组件有很多, 例如: </p><ul><li>eureka注册中心</li><li>Gateway网关</li><li>Ribbon负载均衡</li><li>Feign服务调用</li><li>Hystrix熔断器</li></ul><p>需要上面的组件时, 在pom文件中添加起步依赖即可</p><br><br><p>####3.2 Spring cloud作用 </p><p>Spring cloud是关注全局的服务治理框架,  Spring boot专注于快速、方便集成的单个个体</p><p>一个工程想调用另一个工程的方法可以采用Spring cloud</p><h6 id="3-2-1-添加启动器依赖"><a href="#3-2-1-添加启动器依赖" class="headerlink" title="3.2.1 添加启动器依赖"></a>3.2.1 添加启动器依赖</h6><p>消费者pom</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>heima-springcloud<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.itheima<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>consumer-demo<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>消费者SpringBoot启动引导类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ConsumerApplication<span class="class">.<span class="keyword">class</span>, <span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RestTemplate <span class="title">restTemplate</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> RestTemplate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>消费者controller</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/consumer"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> RestTemplate restTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/test1/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">test1</span><span class="params">(@PathVariable Long id)</span> </span>&#123;</span><br><span class="line">        String url = <span class="string">"http://localhost:9091/user/"</span> + id;</span><br><span class="line">        User user = restTemplate.getForObject(url, User<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">        System.out.println(user.toString());</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><br><h2 id="4-Eureka-注册中心"><a href="#4-Eureka-注册中心" class="headerlink" title="4. Eureka 注册中心"></a>4. Eureka 注册中心</h2><p>Eureka提供服务注册和发现服务,  Eureka只做服务注册, 不提供服务也不消费服务, 可以使用web工程 使用Eureka, 可以用springboot方式搭建</p><p>搭建eureka-server工程</p><br><br><h2 id="5-负载均衡Ribbon"><a href="#5-负载均衡Ribbon" class="headerlink" title="5. 负载均衡Ribbon"></a>5. 负载均衡Ribbon</h2><p>负载均衡是一个算法, 可以通过该算法实现从地址列表中获取一个地址进行服务调用( 算法有两种, 默认是轮询, 随机 )</p><p>在spring could中提供了负载均衡器:  Ribbon</p><p>nginx属于服务器负载均衡</p><p>ribbon属于客户端负载均衡</p><p>可以根据服务名到Eureka服务中获取服务地址列表</p><p>再根据或利用ribbon负载均衡算法从地址列表中获取一个服务地址并访问</p><br><br><h2 id="6-Hystrix熔断器"><a href="#6-Hystrix熔断器" class="headerlink" title="6. Hystrix熔断器"></a>6. Hystrix熔断器</h2><p>Hystrix是Netflflix开源的一个延迟和容错库，用于隔离访问远程服务、第三方库，防止出现级联失败。</p><p>作用: 可以在调用服务的时候, 在服务出现异常时进行服务降级, 避免一直长时间等待服务返回结果而出现雪崩效应</p><p>有两种处理方式: </p><ol><li><p>线程隔离</p><p>加速失败判断</p></li><li><p>服务降级</p><p>及时返回服务失败演示</p></li></ol><p>熔断原理: </p><p>Hystrix的服务熔断机制，可以实现弹性容错；当服务请求情况好转之后，可以自动重连。</p><p>Hystrix会对请求情况计数，当一定时间内失败请求百分比达到阈值，则触发熔断，断路器会完全打开。断路器打开，所有请求都会被降级。(默认失败比例的阈值是50%，请求次数最少不低于20次)</p><p>通过断路的方式，将后续请求直接拒绝，一段时间（默认5秒）之后允许部分请求通过，如果调用成功则回到断路器关闭状态，否则继续打开，拒绝请求的服务。</p><p>服务熔断参数配置:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">hystrix:</span></span><br><span class="line">  <span class="attr">command:</span></span><br><span class="line">    <span class="attr">default:</span></span><br><span class="line">      <span class="attr">execution:</span></span><br><span class="line">        <span class="attr">isolation:</span></span><br><span class="line">          <span class="attr">thread:</span></span><br><span class="line">            <span class="attr">timeoutInMilliseconds:</span> <span class="number">2000</span> <span class="comment"># 超时时间 默认1秒</span></span><br><span class="line">      <span class="attr">circuitBreaker:</span></span><br><span class="line">        <span class="attr">errorThresholdPercentage:</span> <span class="number">50</span> <span class="comment"># 触发熔断错误比例阈值，默认值50%</span></span><br><span class="line">        <span class="attr">sleepWindowInMilliseconds:</span> <span class="number">10000</span> <span class="comment"># 熔断后休眠时长，默认值5秒</span></span><br><span class="line">        <span class="attr">requestVolumeThreshold:</span> <span class="number">10</span> <span class="comment"># 熔断触发最小请求次数，默认值是20</span></span><br></pre></td></tr></table></figure><br><br>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何让百度搜到你的博客</title>
      <link href="/2019/12/05/%E5%A6%82%E4%BD%95%E8%AE%A9%E7%99%BE%E5%BA%A6%E6%90%9C%E5%88%B0%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/12/05/%E5%A6%82%E4%BD%95%E8%AE%A9%E7%99%BE%E5%BA%A6%E6%90%9C%E5%88%B0%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>百度搜索资源平台可以收录你的博客网址链接，大概需要一两天的时间,   一旦收录之后百度搜索引擎会按照标准处理你的博客以及博文</p><p>百度搜索资源平台:  <a href="https://ziyuan.baidu.com/linksubmit/url" target="_blank" rel="noopener">https://ziyuan.baidu.com/linksubmit/url</a></p><a id="more"></a><br><br><p><strong>1. 首先打开上述网址链接</strong></p><p><img src="../../../../assets/img/img1.png" alt="1"></p><p>进来之后在填写你的博客链接地址</p><p>然后耐心等待即可</p><p>tips: 不一定会被收录,  做好心理准备</p><br><br>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java程序报错问题分析</title>
      <link href="/2019/12/04/Java%E7%A8%8B%E5%BA%8F%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/"/>
      <url>/2019/12/04/Java%E7%A8%8B%E5%BA%8F%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>听说..</p><p>佛曰:  前世五百年的回眸,才换来今生的擦肩而过<br>程序员:  佛祖上辈子我造了碰到了谁?这辈子必须每天都见一次bug<br>佛曰:  尔等没有前生,为后世集福吧  </p><a id="more"></a><p>  <br><br><br></p><p><strong><em>Java程序报错问题分析:</em></strong></p><hr><p>一定要看错误, 根据错误查找问题 !!!</p><p>有错误先找错误, 没错误就使用debug</p><p>当你发现如果所有的其他地方都没有问题的时候,要把那些你认为一定没问题的代码重新怀疑一遍</p><p>雪崩时, 没有一片雪花是无辜的</p><p><br><br><br></p><h4 id="1-1-编译时报错"><a href="#1-1-编译时报错" class="headerlink" title="1.1 编译时报错"></a>1.1 编译时报错</h4><p>编译不通过– 根据控制台 错误找问题</p><p>1) interface ,或者common  层 开发了新的方法,新的接口,但是没有安装 导致编译不通过,可能是其他模块尚未编译,虽然idea预编译时不会报错, 但当进行编译时, maven引入了其他模块的坐标, 而其它模块更改之后并没有重新编译打包, 那么maven引用的还是未修改之前的版本, 重新clear install即可</p><p>2) 代码的某一行导入了 不该导入的包(可能这个包根本就没有用到)</p><p>此时控制台会报告那个类的哪一行可能import了错误的类,找到修改就好了</p><p>3)  pom文件导入报错 </p><p> 我们从PDF 文档中copy  过来的坐标有时候有特殊不可见字符字符 , 碰到这类问题我们要记住: 不要从pdf 中复制坐标,从老师的代码中复制</p><p><br><br><br></p><h4 id="1-2-静态网页报错-效果不显示"><a href="#1-2-静态网页报错-效果不显示" class="headerlink" title="1.2 静态网页报错,效果不显示"></a>1.2 静态网页报错,效果不显示</h4><p>方法1) 根据错误查找原因: 打开开发者模式</p><p>F12是个好东西</p><p>方法2) 二分法</p><p>先删一半代码, 看有没有解决, 没有解决再删一半代码</p><p>如果正常了一定是刚删的代码的问题</p><p>能快速定位错误代码的位置, 节约时间</p><p>  <br><br><br></p><h4 id="1-3-vue-id-not-defined"><a href="#1-3-vue-id-not-defined" class="headerlink" title="1.3 vue id not defined"></a>1.3 vue id not defined</h4><p>var app = new vue(){}    //小写</p><p>var app2 = new Vue(){}</p><p>  <br><br><br></p><h4 id="1-4-ConnectException"><a href="#1-4-ConnectException" class="headerlink" title="1.4 ConnectException"></a>1.4 ConnectException</h4><p>如果服务启动是报错,此时应该根据错误日志定位问题</p><p>找到我们能看懂的关键词</p><p>java.net.ConnectException: Connection refused: no further informatiion</p><p>​    at org.apache.<strong>zookeeper</strong>.ClientcnxnsocketNIO.doTransport</p><p>可能是zookeeper没有启动, 或者启动失败, 重启一下试试</p><p> <br><br><br> </p><h4 id="1-5-404问题"><a href="#1-5-404问题" class="headerlink" title="1.5 404问题"></a>1.5 404问题</h4><p>打开控制台查看请求路径</p><p>确认html路径是否有误,大小写, 空格等</p><p>web-xml是否配置spring-mvc</p><p> web.xml 中拦截路径没有写成写成*.do</p><p>包扫描是否有误</p><p>没有加上@Responsebody注解</p><p>方法上我们使用的是RestController 注解,但是我们看到的却是  Controller 注解</p><p>  <br><br><br></p><h4 id="1-6-空指针异常"><a href="#1-6-空指针异常" class="headerlink" title="1.6 空指针异常"></a>1.6 空指针异常</h4><p>user.getUsername(); 一定是.之前的user为空</p><p>如果是 servcie 对象,可能是没有 @Reference ,或者 @Reference 注解导入包错误了</p><p>如果是 Controller层的参数问题,则有可能是 前端传递的参数和我们Controller 层接收的参数不一致</p><p>  <br><br><br></p><h4 id="1-7-No-provider-available"><a href="#1-7-No-provider-available" class="headerlink" title="1.7 No provider available"></a>1.7 No provider available</h4><p>没有提供者, 服务器端出现问题</p><p>没加@Service(interfaceClass = exampleService.class)</p><p>@Service  注解上是否忘记了 interfaceclass 配置</p><p>unimplemented interface :  exampleService.class是否写错, 复制来的需要更改</p><p>包扫描是否有误</p><p><br><br><br></p><h4 id="1-8-Could-not-find-result-map-com-syx-pojo-User"><a href="#1-8-Could-not-find-result-map-com-syx-pojo-User" class="headerlink" title="1.8 Could not find result map com.syx.pojo.User"></a>1.8 Could not find result map com.syx.pojo.User</h4><p>userMapper映射文件中resultType写成了resultMap</p><p><br><br><br>  </p><h4 id="1-9-集群-分布式和负载均衡"><a href="#1-9-集群-分布式和负载均衡" class="headerlink" title="1.9 集群, 分布式和负载均衡"></a>1.9 集群, 分布式和负载均衡</h4><p>集群：同一个业务，部署在多个服务器上 。集群主要是简单加机器解决问题，对于问题本身不做任何分解； </p><p>主要的使用场景是为了分担请求的压力，也就是在几个服务器上部署相同的应用程序，来分担客户端请求。 </p><p>分布式：一个业务拆分为多个子业务，部署在多个服务器上 。</p><p>将一套系统拆分成不同子系统部署在不同服务器上（这叫分布式），然后部署多个相同的子系统在不同的服务器上（这叫集群），部署在不同服务器上的同一个子系统应做负载均衡。 </p><p>负载均衡（Load Balance）：其实就是将请求分摊到多个操作单元上进行执行，从而共同完成工作任务。</p><p>在集群负载均衡时，Dubbo 提供了多种均衡策略（包括随机、轮询、最少活跃调用数、一致性Hash），缺省为random随机调用。</p><p>配置负载均衡策略，既可以在服务提供者一方配置，也可以在服务消费者一方配置，如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/demo"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="comment">//在服务消费者一方配置负载均衡策略</span></span><br><span class="line">    <span class="meta">@Reference</span>(check = <span class="keyword">false</span>,loadbalance = <span class="string">"random"</span>)</span><br><span class="line">    <span class="keyword">private</span> HelloService helloService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="comment">//远程调用</span></span><br><span class="line">        String result = helloService.sayHello(name);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在服务提供者一方配置负载均衡</span></span><br><span class="line"><span class="meta">@Service</span>(loadbalance = <span class="string">"random"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServiceImpl</span> <span class="keyword">implements</span> <span class="title">HelloService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello "</span> + name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以通过启动多个服务提供者来观察Dubbo负载均衡效果。</p><p>注意：因为我们是在一台机器上启动多个服务提供者，所以需要修改tomcat的端口号和Dubbo服务的端口号来防止端口冲突。</p><p>在实际生产环境中，多个服务提供者是分别部署在不同的机器上，所以不存在端口冲突问题。</p><p><br><br><br></p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客添加音乐插件</title>
      <link href="/2019/12/03/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90%E6%8F%92%E4%BB%B6/"/>
      <url>/2019/12/03/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>此次集成的音乐插件是网易云官方插件, 博客为yilia主题, 为自己的博客添加一曲优美动听的背景音乐</p><p><a href="https://music.163.com/" target="_blank" rel="noopener">网易云音乐: https://music.163.com/ </a></p><a id="more"></a><p><br><br></p><p><strong>1. 首先打开网易云音乐, 选择一首可以生成外链的歌曲,  例如这首: *wonderful tonight（Cover：方大同）</strong></p><hr><p><img src="http://q1i2sunf7.bkt.clouddn.com/Snipaste_2019-12-03_21-07-02.png" alt="图片1">  </p><p><br><br></p><p><strong>2. 点击生成外链播放器, 注意有些歌曲会有版权的限制</strong></p><p><img src="http://q1i2sunf7.bkt.clouddn.com/Snipaste_2019-12-03_21-18-08.png" alt="图片2"></p><p>网易云为我们提供了iframe插件和flash插件共我们选择, 选择其中一种即可, 此处选择iframe插件</p><p>选择尺寸默认即可</p><p>播放模式: 自动播放  </p><br><br><p><strong>3. 复制生成外链接下的HTML代码</strong></p><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">marginheight</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">330</span> <span class="attr">height</span>=<span class="string">86</span> <span class="attr">src</span>=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=1347027595&amp;auto=1&amp;height=66"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><p><br><br></p><p><strong>4. 打开yilia主题下的themes\yilia\layout_partial文件夹下的left-col.ejs文件</strong></p><hr><p>在下面代码中:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"header-nav"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"social"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">for</span> (<span class="attr">var</span> <span class="attr">i</span> <span class="attr">in</span> <span class="attr">theme.subnav</span>)&#123; %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"&lt;%= i %&gt;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">"&lt;%- url_for(theme.subnav[i]) %&gt;"</span> <span class="attr">title</span>=<span class="string">"&lt;%= i %&gt;"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"icon-&lt;%= i %&gt;"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br><span class="line">         <span class="tag">&lt;<span class="name">%&#125;%</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><p>插入如下代码:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 网易云音乐插件 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.music</span> &amp;&amp; <span class="attr">theme.music.enable</span>)&#123; %&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position:absolute; bottom:120px left:auto; width:85%"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">marginheight</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">"240"</span> <span class="attr">height</span>=<span class="string">"52"</span> <span class="attr">src</span>=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=1347027595&amp;&gt;&amp;auto=&lt;%=theme.music.autoplay?1:0%&gt;&amp;height=32"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure><p>插入之后:</p><p>插入时注意因为我加了一句中文注释 (如果不想加的话可以直接删除该注释), 可能会出现乱码问题, 可以把全文选中之后, 剪切, 更改编码方式为utf-8, 之后把原文粘贴上去即可</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"header-nav"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"social"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">for</span> (<span class="attr">var</span> <span class="attr">i</span> <span class="attr">in</span> <span class="attr">theme.subnav</span>)&#123; %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"&lt;%= i %&gt;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">"&lt;%- url_for(theme.subnav[i]) %&gt;"</span> <span class="attr">title</span>=<span class="string">"&lt;%= i %&gt;"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"icon-&lt;%= i %&gt;"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%&#125;%</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 网易云音乐插件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.music</span> &amp;&amp; <span class="attr">theme.music.enable</span>)&#123; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position:absolute; bottom:120px left:auto; width:85%"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">marginheight</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">"240"</span> <span class="attr">height</span>=<span class="string">"52"</span> <span class="attr">src</span>=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=1347027595&amp;&gt;&amp;auto=&lt;%=theme.music.autoplay?1:0%&gt;&amp;height=32"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我在此处加入了一些样式上的修改, 如果不喜欢的话也可以直接把音乐外链接生成的HTML代码直接放到合适的位置即可 </p><p>效果如图: </p><p><img src="http://q1i2sunf7.bkt.clouddn.com/Snipaste_2019-12-03_21-35-02.png" alt="图片3"></p><br><br><p><strong>5. 打开yilia主题下的themes\yilia\文件夹下的_config.yml文件</strong></p><hr><p>修改如下配置:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 网易云音乐插件</span></span><br><span class="line"><span class="attr">music:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 网易云分享的ID</span></span><br><span class="line">  <span class="attr">id:</span> <span class="number">1077408</span></span><br><span class="line">  <span class="attr">autoplay:</span> <span class="literal">false</span>  </span><br><span class="line">  <span class="comment"># 是否开启自动播放</span></span><br></pre></td></tr></table></figure><p>以上就完成了yilia主题集成网易云音乐的播放插件  </p><br><br>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记承天寺夜游</title>
      <link href="/2019/12/02/%E8%AE%B0%E6%89%BF%E5%A4%A9%E5%AF%BA%E5%A4%9C%E6%B8%B8/"/>
      <url>/2019/12/02/%E8%AE%B0%E6%89%BF%E5%A4%A9%E5%AF%BA%E5%A4%9C%E6%B8%B8/</url>
      
        <content type="html"><![CDATA[<p><a href="https://so.gushiwen.org/shiwen/default.aspx?cstr=%e5%ae%8b%e4%bb%a3" target="_blank" rel="noopener">宋代</a>：<a href="https://baike.baidu.com/item/%E8%8B%8F%E8%BD%BC/53906?fr=aladdin" target="_blank" rel="noopener">苏轼</a></p><p>　　元丰六年十月十二日夜，解衣欲睡，月色入户，欣然起行。念无与为乐者，遂至承天寺寻张怀民。怀民亦未寝，相与步于中庭。庭下如积水空明，水中藻、荇交横，盖竹柏影也。何夜无月？何处无竹柏？但少闲人如吾两人者耳。</p><a id="more"></a><p>《记承天寺夜游》是宋代文学家<a href="https://baike.baidu.com/item/%E8%8B%8F%E8%BD%BC/53906" target="_blank" rel="noopener">苏轼</a>创作的一篇<a href="https://baike.baidu.com/item/%E5%8F%A4%E6%96%87/1591397" target="_blank" rel="noopener">古文</a>。文章对月夜景色作了美妙描绘，真实地记录了作者被贬黄州的一个生活片段，也体现了他与<a href="https://baike.baidu.com/item/%E5%BC%A0%E6%80%80%E6%B0%91/4925868" target="_blank" rel="noopener">张怀民</a>的深厚友谊与对知音甚少的无限感慨，同时表达了他壮志难酬的苦闷及自我排遣，表现了他旷达乐观的人生态度。全文情感真挚，言简义丰，起于当起，止于当止，如行云流水，一气呵成。 </p>]]></content>
      
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/11/19/hello-world/"/>
      <url>/2019/11/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p> 欢迎来到我的博客！这是我的第一篇博文。点击查看<a href="https://shiyongxu.github.io/archives/">归档</a>可以查看更多文章。如果您在访问我的博客时遇到任何问题，可以憋在心里，也可以在GitHub上询问我。 </p><p>我的GitHub:     <a href="https://github.com/shiyongxu" target="_blank" rel="noopener">https://github.com/shiyongxu</a></p><a id="more"></a> <br><h3 id="1-Create-a-new-post"><a href="#1-Create-a-new-post" class="headerlink" title="1. Create a new post"></a>1. Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><br><br><h3 id="2-Run-server"><a href="#2-Run-server" class="headerlink" title="2. Run server"></a>2. Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><br><br><h3 id="3-Generate-static-files"><a href="#3-Generate-static-files" class="headerlink" title="3. Generate static files"></a>3. Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><br><br><h3 id="4-Deploy-to-remote-sites"><a href="#4-Deploy-to-remote-sites" class="headerlink" title="4. Deploy to remote sites"></a>4. Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><br><br>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
