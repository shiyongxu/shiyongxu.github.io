<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据库设计三大范式</title>
      <link href="/2019/12/31/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E4%B8%89%E5%A4%A7%E8%8C%83%E5%BC%8F/"/>
      <url>/2019/12/31/%E6%95%B0%E6%8D%AE%E5%BA%93%E8%AE%BE%E8%AE%A1%E4%B8%89%E5%A4%A7%E8%8C%83%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<p><strong>什么是范式：</strong></p><p>建立科学的，规范的的数据库是需要满足一些规范的来优化数据数据存储方式。</p><p>在关系型数据库中这些规范就可以称为范式。</p><a id="more"></a><br><br><p><strong>什么是三大范式：</strong></p><p>第一范式：当关系模式R的所有属性都不能在分解为更基本的数据单位时，称R是满足第一范式的，简记为1NF。满足第一范式是关系模式规范化的最低要</p><p>求，否则，将有很多基本操作在这样的关系模式中实现不了。</p><p>第二范式：如果关系模式R满足第一范式，并且R得所有非主属性都完全依赖于R的每一个候选关键属性，称R满足第二范式，简记为2NF。</p><p>第三范式：设R是一个满足第一范式条件的关系模式，X是R的任意属性集，如果X非传递依赖于R的任意一个候选关键字，称R满足第三范式，简记为3NF.</p><blockquote><p>关系实质上是一张二维表，其中每一行是一个元组，每一列是一个属性</p></blockquote><br><br><p><strong>第一范式:</strong></p><p>表中的列不可再拆分</p><p> <strong><em>1、每一列属性都是不可再分的属性值，确保每一列的原子性</em></strong></p><p> 例如: </p><p>一个表中的列为: address(地址) , 如果需要按照某个省或某个市进行分类时, 是不满足要求的</p><p>需要拆分为两列: province(省) 和 city(市)</p><p><strong><em>2、两列的属性相近或相似或一样，尽量合并属性一样的列，确保不产生冗余数据</em></strong></p><p> 例如: </p><p>一个表中的两列为: order1 和 order1 </p><p>需要合并为一列: order</p><br><br><p><strong>第二范式:</strong></p><p>表中列要和主键有关系</p><p><strong><em>每一行的数据只能与其中一列相关，即一行数据只做一件事。只要数据列中出现数据重复，就要把表拆分开来</em></strong></p><p> 例如: </p><p>一个表中四列为:   user , phoneNumber, order, orderName </p><p>一个用户可以下多个订单, 这样phoneNumber 和 orderName就是重复的, 就会造成数据冗余 </p><p>需要拆分为两张表: </p><p>表1 :  user, phoneNumber, order</p><p>表2 :  order , orderName </p><blockquote><p>这样便实现啦一条数据做一件事，不掺杂复杂的关系逻辑。同时对表数据的更新维护也更易操作。 </p></blockquote><br><br><p><strong>第三范式:</strong></p><p>列和主键是直接关系, 不能是间接关系</p><p><strong><em>数据不能存在传递关系，即 每个属性都跟主键有直接关系而不是间接关系</em></strong></p><p> 例如: </p><p>一个表中三列为:   学号  所在院校   院校地址 </p><p>需要拆分为两张表: </p><p>表1 :   学号，所在院校</p><p>表2 :   所在院校，院校地址</p><br><br>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>String类面试题</title>
      <link href="/2019/12/29/String%E7%B1%BB%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
      <url>/2019/12/29/String%E7%B1%BB%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="1-string类能不能被继承"><a href="#1-string类能不能被继承" class="headerlink" title="1. string类能不能被继承?"></a>1. string类能不能被继承?</h2><p>Java中对string类的定义:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">String</span></span></span><br><span class="line"><span class="class">    <span class="keyword">implements</span> <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span>, <span class="title">Comparable</span>&lt;<span class="title">String</span>&gt;, <span class="title">CharSequence</span> </span>&#123;</span><br><span class="line">        <span class="comment">//...</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>不能被继承，因为String类有final修饰符，而final修饰的类是不能被继承的。</p><a id="more"></a> <br><br><h2 id="2-final修饰符的用法："><a href="#2-final修饰符的用法：" class="headerlink" title="2. final修饰符的用法："></a>2. final修饰符的用法：</h2><p>1.修饰类</p><p>　　<strong>当用final修饰一个类时，表明这个类不能被继承</strong>。final类中的成员变量可以根据需要设为final，但是要注意final类中的所有成员方法都会被隐式地指定为final方法。</p><p>2.修饰方法</p><p>　　使用final修饰方法的原因有两个。第一个原因是把方法锁定，以防任何继承类修改它的含义；第二个原因是效率。在早期的Java实现版本中，会将final方法转为内嵌调用。但是如果方法过于庞大，可能看不到内嵌调用带来的任何性能提升。在最近的Java版本中，不需要使用final方法进行这些优化了。</p><p>　　因此，<strong>只有在想明确禁止该方法在子类中被覆盖的情况下才将方法设置为final。</strong></p><p>　　&gt;注：一个类中的private方法会隐式地被指定为final方法。</p><p>3.修饰变量</p><p>　　对于被final修饰的变量，如果是基本数据类型的变量，<strong>则其数值一旦在初始化之后便不能更改</strong>；如果是引用类型的变量，则在对其初始化之后便不能再让其指向另一个对象。虽然不能再指向其他对象，但是它指向的对象的内容是可变的。</p><br><br><p>##3. final和static的区别：</p><p>static作用于成员变量用来表示只保存一份副本，而final的作用是用来保证变量不可变。 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyClass</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">double</span> i = Math.random();</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">double</span> j = Math.random();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Demo</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span>  </span>&#123;</span><br><span class="line">         MyClass myClass1 = <span class="keyword">new</span> MyClass();</span><br><span class="line">         MyClass myClass2 = <span class="keyword">new</span> MyClass();</span><br><span class="line">       System.out.println(myClass1.i);</span><br><span class="line">         System.out.println(myClass2.i);</span><br><span class="line">         System.out.println(myClass1.j);</span><br><span class="line">        System.out.println(myClass2.j);</span><br><span class="line">   &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>运行结果: </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//0.3222977275463088</span></span><br><span class="line"><span class="comment">//0.2565532218939688</span></span><br><span class="line"><span class="comment">//0.36856868882926397</span></span><br><span class="line"><span class="comment">//0.36856868882926397</span></span><br></pre></td></tr></table></figure><p>被static修饰的成员变量的值没有变</p><p>被final修饰的成员变量的值发生了变化</p><br><br>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot面试题</title>
      <link href="/2019/12/29/SpringBoot%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
      <url>/2019/12/29/SpringBoot%E9%9D%A2%E8%AF%95%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="1-SpringBoot是干什么的"><a href="#1-SpringBoot是干什么的" class="headerlink" title="1. SpringBoot是干什么的?"></a>1. SpringBoot是干什么的?</h2><p>Spring Boot只是一个快速使用spring的方式, 可以<strong>快速的启动 Spring 应用</strong>。</p><p>Spring Boot是一个便捷搭建spring工程的脚手架。它是 Spring 对  *<em>“约定优先于配置” *</em> 理念的最佳实践产物。</p><a id="more"></a> <br><br><h2 id="2-SpringBoot可以代替spring吗"><a href="#2-SpringBoot可以代替spring吗" class="headerlink" title="2. SpringBoot可以代替spring吗?"></a>2. SpringBoot可以代替spring吗?</h2><p><strong>不可以</strong></p><p>Spring Boot应用本质上就是一个基于 Spring 框架的应用, 作用是帮助开发人员快速搭建大型的spring 项目</p><p>Spring Boot可以简化工程的配置，依赖管理；实现开发人员把时间都集中在业务开发上。</p><br><br><p>##3. SpringBoot的核心是什么? </p><p>解决了混乱的pom配置 - 起步依赖</p><p>解决了繁重的xml配置 - 自动装配</p><p>Spring Boot的核心是起步依赖和自动装配。</p><br><br><h2 id="4-SpringBoot的配置文件格式有哪些"><a href="#4-SpringBoot的配置文件格式有哪些" class="headerlink" title="4. SpringBoot的配置文件格式有哪些?"></a>4. SpringBoot的配置文件格式有哪些?</h2><p>####4.1 如果多个配置文件都配置了某个key, 最后以谁为准?</p><ol><li>application.properties</li><li>application.yaml</li><li>application.yml</li></ol><p>SpringBoot支持这三种格式的配置文件。（Spring Framwork只支持application.properties） </p><p>application.yml文件是完全可以代替application.properties文件的</p><p>当application.properties和application.yml文件在并存时, 最后以properties为准, 最后加载的会如果重复了会把前面的覆盖</p><h4 id="4-2-SpringBoot会从这四个位置全部加载主配置文件"><a href="#4-2-SpringBoot会从这四个位置全部加载主配置文件" class="headerlink" title="4.2 SpringBoot会从这四个位置全部加载主配置文件"></a>4.2 SpringBoot会从这四个位置全部加载主配置文件</h4><p>SpringBoot会从这四个位置全部加载主配置文件，如果高优先级中配置文件属性与低优先级配置文件不冲突的属性，则会共同存在</p><ol><li>先去项目根目录找config文件夹下找配置文件件</li><li>再去根目录下找配置文件</li><li>去resources下找cofnig文件夹下找配置文件</li><li>去resources下找配置文件</li></ol><br><br><p>##5. SpringBoot和SpringCloud是什么关系? </p><p>SpringCloud基于SpringBoot的, SpringCloud关注微服务治理,运行, 调用</p><br><br><h2 id="6-SpringBoot的自动装配原理是什么"><a href="#6-SpringBoot的自动装配原理是什么" class="headerlink" title="6. SpringBoot的自动装配原理是什么?"></a>6. SpringBoot的自动装配原理是什么?</h2><p>SpringBoot一启动 , 会自动加载spring.factories这个配置文件</p><p>怎么加载? </p><p>通过import注解加上一个选择器</p><br><br>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java程序报错-Logback 配置错误</title>
      <link href="/2019/12/23/java%E7%A8%8B%E5%BA%8F%E6%8A%A5%E9%94%99-Logback%20%E9%85%8D%E7%BD%AE%E9%94%99%E8%AF%AF/"/>
      <url>/2019/12/23/java%E7%A8%8B%E5%BA%8F%E6%8A%A5%E9%94%99-Logback%20%E9%85%8D%E7%BD%AE%E9%94%99%E8%AF%AF/</url>
      
        <content type="html"><![CDATA[<p><strong>程序报错具体原因:</strong></p><p>Logback 配置日志输出路径错误，默认复制过来logback-spring.xml，配置的输出日志路径存放 D://盘,我没有D盘。所以Springboot 启动不了了，把日志输出路径 该改其他盘，即可。</p> <a id="more"></a><p><br><br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">java.lang.IllegalStateException: Logback configuration error detected: </span><br><span class="line">ERROR in ch.qos.logback.core.rolling.RollingFileAppender[FILE] - Failed to create parent directories <span class="keyword">for</span> [d:\logs\xc<span class="number">.2018</span>-<span class="number">11</span>-<span class="number">06</span>.log]</span><br><span class="line">ERROR in ch.qos.logback.core.rolling.RollingFileAppender[FILE] - openFile(<span class="keyword">null</span>,<span class="keyword">true</span>) call failed. java.io.FileNotFoundException: d:\logs\xc<span class="number">.2018</span>-<span class="number">11</span>-<span class="number">06</span>.log (系统找不到指定的路径。)</span><br><span class="line">at org.springframework.boot.logging.logback.LogbackLoggingSystem.loadConfiguration(LogbackLoggingSystem.java:<span class="number">166</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java程序报错-Could not resolve type alias</title>
      <link href="/2019/12/22/java%E7%A8%8B%E5%BA%8F%E6%8A%A5%E9%94%99-Could%20not%20resolve%20type%20alias/"/>
      <url>/2019/12/22/java%E7%A8%8B%E5%BA%8F%E6%8A%A5%E9%94%99-Could%20not%20resolve%20type%20alias/</url>
      
        <content type="html"><![CDATA[<p><strong>程序报错具体原因:</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Caused by: org.apache.ibatis.builder.BuilderException: </span><br><span class="line">Error parsing Mapper XML. Cause: </span><br><span class="line">org.apache.ibatis.builder.BuilderException: Error resolving <span class="class"><span class="keyword">class</span>. </span></span><br><span class="line">Cause: org.apache.ibatis.type.TypeException: </span><br><span class="line">Could not resolve type alias <span class="string">'com.xuecheng.framewok.domain.course.CourseBase'</span>.  </span><br><span class="line">Cause: java.lang.ClassNotFoundException: </span><br><span class="line">Cannot find class: com.xuecheng.framewok.domain.course.CourseBase</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findCourseBaseById"</span> <span class="attr">parameterType</span>=<span class="string">"java.lang.String"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">resultType</span>=<span class="string">"com.xuecheng.framework.domain.course.CourseBase"</span>&gt;</span></span><br><span class="line">    select * from course_base where id = #&#123;id&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">com.xuecheng.framewok.domain.course.CourseBase 中的framework写错了, 写成framewok, 结果导致java以为com.xuecheng.framewok.domain.course.CourseBase这句是自己起的别名, 所以报找不到这个别名对应的类</span><br></pre></td></tr></table></figure><br><br><p><strong>详细错误信息:</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2019</span>-<span class="number">12</span>-<span class="number">23</span> <span class="number">09</span>:<span class="number">20</span>:<span class="number">16.309</span> [main] ERROR o.s.boot.SpringApplication - Application run failed</span><br><span class="line">org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'courseMapper' defined in file [E:\xc\xcEduService\xc-service-manage-course-two\target\classes\com\xuecheng\manage_course\dao\CourseMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xuecheng.framewok.domain.course.CourseBase'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xuecheng.framewok.domain.course.CourseBase</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:<span class="number">1702</span>)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:<span class="number">579</span>)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:<span class="number">501</span>)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$<span class="number">0</span>(AbstractBeanFactory.java:<span class="number">317</span>)</span><br><span class="line">at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:<span class="number">228</span>)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:<span class="number">315</span>)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:<span class="number">199</span>)</span><br><span class="line">at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:<span class="number">741</span>)</span><br><span class="line">at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:<span class="number">869</span>)</span><br><span class="line">at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:<span class="number">550</span>)</span><br><span class="line">at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:<span class="number">759</span>)</span><br><span class="line">at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:<span class="number">395</span>)</span><br><span class="line">at org.springframework.boot.SpringApplication.run(SpringApplication.java:<span class="number">327</span>)</span><br><span class="line">at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:<span class="number">138</span>)</span><br><span class="line">at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:<span class="number">99</span>)</span><br><span class="line">at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:<span class="number">117</span>)</span><br><span class="line">at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:<span class="number">108</span>)</span><br><span class="line">at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:<span class="number">190</span>)</span><br><span class="line">at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:<span class="number">132</span>)</span><br><span class="line">at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:<span class="number">246</span>)</span><br><span class="line">at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:<span class="number">227</span>)</span><br><span class="line">at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$<span class="number">1</span>.runReflectiveCall(SpringJUnit4ClassRunner.java:<span class="number">289</span>)</span><br><span class="line">at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:<span class="number">12</span>)</span><br><span class="line">at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:<span class="number">291</span>)</span><br><span class="line">at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:<span class="number">246</span>)</span><br><span class="line">at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:<span class="number">97</span>)</span><br><span class="line">at org.junit.runners.ParentRunner$<span class="number">3</span>.run(ParentRunner.java:<span class="number">290</span>)</span><br><span class="line">at org.junit.runners.ParentRunner$<span class="number">1</span>.schedule(ParentRunner.java:<span class="number">71</span>)</span><br><span class="line">at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:<span class="number">288</span>)</span><br><span class="line">at org.junit.runners.ParentRunner.access$<span class="number">000</span>(ParentRunner.java:<span class="number">58</span>)</span><br><span class="line">at org.junit.runners.ParentRunner$<span class="number">2</span>.evaluate(ParentRunner.java:<span class="number">268</span>)</span><br><span class="line">at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:<span class="number">61</span>)</span><br><span class="line">at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:<span class="number">70</span>)</span><br><span class="line">at org.junit.runners.ParentRunner.run(ParentRunner.java:<span class="number">363</span>)</span><br><span class="line">at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:<span class="number">190</span>)</span><br><span class="line">at org.junit.runner.JUnitCore.run(JUnitCore.java:<span class="number">137</span>)</span><br><span class="line">at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:<span class="number">68</span>)</span><br><span class="line">at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:<span class="number">47</span>)</span><br><span class="line">at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:<span class="number">242</span>)</span><br><span class="line">at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:<span class="number">70</span>)</span><br><span class="line">Caused by: java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xuecheng.framewok.domain.course.CourseBase'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xuecheng.framewok.domain.course.CourseBase</span><br><span class="line">at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:<span class="number">83</span>)</span><br><span class="line">at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:<span class="number">44</span>)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:<span class="number">1761</span>)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:<span class="number">1698</span>)</span><br><span class="line">... <span class="number">39</span> common frames omitted</span><br><span class="line">Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xuecheng.framewok.domain.course.CourseBase'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xuecheng.framewok.domain.course.CourseBase</span><br><span class="line">at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:<span class="number">120</span>)</span><br><span class="line">at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:<span class="number">92</span>)</span><br><span class="line">at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.loadXmlResource(MapperAnnotationBuilder.java:<span class="number">173</span>)</span><br><span class="line">at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(MapperAnnotationBuilder.java:<span class="number">124</span>)</span><br><span class="line">at org.apache.ibatis.binding.MapperRegistry.addMapper(MapperRegistry.java:<span class="number">72</span>)</span><br><span class="line">at org.apache.ibatis.session.Configuration.addMapper(Configuration.java:<span class="number">741</span>)</span><br><span class="line">at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:<span class="number">80</span>)</span><br><span class="line">... <span class="number">42</span> common frames omitted</span><br><span class="line">Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xuecheng.framewok.domain.course.CourseBase'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xuecheng.framewok.domain.course.CourseBase</span><br><span class="line">at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:<span class="number">118</span>)</span><br><span class="line">at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:<span class="number">74</span>)</span><br><span class="line">at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:<span class="number">135</span>)</span><br><span class="line">at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:<span class="number">128</span>)</span><br><span class="line">at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:<span class="number">118</span>)</span><br><span class="line">... <span class="number">48</span> common frames omitted</span><br><span class="line">Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xuecheng.framewok.domain.course.CourseBase'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xuecheng.framewok.domain.course.CourseBase</span><br><span class="line">at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:<span class="number">120</span>)</span><br><span class="line">at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:<span class="number">149</span>)</span><br><span class="line">at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:<span class="number">116</span>)</span><br><span class="line">... <span class="number">52</span> common frames omitted</span><br><span class="line">Caused by: java.lang.ClassNotFoundException: Cannot find class: com.xuecheng.framewok.domain.course.CourseBase</span><br><span class="line">at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:<span class="number">200</span>)</span><br><span class="line">at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:<span class="number">89</span>)</span><br><span class="line">at org.apache.ibatis.io.Resources.classForName(Resources.java:<span class="number">261</span>)</span><br><span class="line">at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:<span class="number">116</span>)</span><br><span class="line">... <span class="number">54</span> common frames omitted</span><br><span class="line"><span class="number">2019</span>-<span class="number">12</span>-<span class="number">23</span> <span class="number">09</span>:<span class="number">20</span>:<span class="number">16.312</span> [main] ERROR o.s.test.context.TestContextManager - Caught exception <span class="keyword">while</span> allowing TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener@<span class="number">6</span>aaceffd] to prepare test instance [com.xuecheng.manage_course.dao.TestDao@<span class="number">99</span>c3cee]</span><br><span class="line">java.lang.IllegalStateException: Failed to load ApplicationContext</span><br><span class="line">at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:<span class="number">125</span>)</span><br><span class="line">at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:<span class="number">108</span>)</span><br><span class="line">at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:<span class="number">190</span>)</span><br><span class="line">at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:<span class="number">132</span>)</span><br><span class="line">at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:<span class="number">246</span>)</span><br><span class="line">at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:<span class="number">227</span>)</span><br><span class="line">at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$<span class="number">1</span>.runReflectiveCall(SpringJUnit4ClassRunner.java:<span class="number">289</span>)</span><br><span class="line">at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:<span class="number">12</span>)</span><br><span class="line">at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:<span class="number">291</span>)</span><br><span class="line">at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:<span class="number">246</span>)</span><br><span class="line">at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:<span class="number">97</span>)</span><br><span class="line">at org.junit.runners.ParentRunner$<span class="number">3</span>.run(ParentRunner.java:<span class="number">290</span>)</span><br><span class="line">at org.junit.runners.ParentRunner$<span class="number">1</span>.schedule(ParentRunner.java:<span class="number">71</span>)</span><br><span class="line">at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:<span class="number">288</span>)</span><br><span class="line">at org.junit.runners.ParentRunner.access$<span class="number">000</span>(ParentRunner.java:<span class="number">58</span>)</span><br><span class="line">at org.junit.runners.ParentRunner$<span class="number">2</span>.evaluate(ParentRunner.java:<span class="number">268</span>)</span><br><span class="line">at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:<span class="number">61</span>)</span><br><span class="line">at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:<span class="number">70</span>)</span><br><span class="line">at org.junit.runners.ParentRunner.run(ParentRunner.java:<span class="number">363</span>)</span><br><span class="line">at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:<span class="number">190</span>)</span><br><span class="line">at org.junit.runner.JUnitCore.run(JUnitCore.java:<span class="number">137</span>)</span><br><span class="line">at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:<span class="number">68</span>)</span><br><span class="line">at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:<span class="number">47</span>)</span><br><span class="line">at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:<span class="number">242</span>)</span><br><span class="line">at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:<span class="number">70</span>)</span><br><span class="line">Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'courseMapper' defined in file [E:\xc\xcEduService\xc-service-manage-course-two\target\classes\com\xuecheng\manage_course\dao\CourseMapper.class]: Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xuecheng.framewok.domain.course.CourseBase'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xuecheng.framewok.domain.course.CourseBase</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:<span class="number">1702</span>)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:<span class="number">579</span>)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:<span class="number">501</span>)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$<span class="number">0</span>(AbstractBeanFactory.java:<span class="number">317</span>)</span><br><span class="line">at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:<span class="number">228</span>)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:<span class="number">315</span>)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:<span class="number">199</span>)</span><br><span class="line">at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:<span class="number">741</span>)</span><br><span class="line">at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:<span class="number">869</span>)</span><br><span class="line">at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:<span class="number">550</span>)</span><br><span class="line">at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:<span class="number">759</span>)</span><br><span class="line">at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:<span class="number">395</span>)</span><br><span class="line">at org.springframework.boot.SpringApplication.run(SpringApplication.java:<span class="number">327</span>)</span><br><span class="line">at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:<span class="number">138</span>)</span><br><span class="line">at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:<span class="number">99</span>)</span><br><span class="line">at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:<span class="number">117</span>)</span><br><span class="line">... <span class="number">24</span> common frames omitted</span><br><span class="line">Caused by: java.lang.IllegalArgumentException: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xuecheng.framewok.domain.course.CourseBase'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xuecheng.framewok.domain.course.CourseBase</span><br><span class="line">at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:<span class="number">83</span>)</span><br><span class="line">at org.springframework.dao.support.DaoSupport.afterPropertiesSet(DaoSupport.java:<span class="number">44</span>)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:<span class="number">1761</span>)</span><br><span class="line">at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:<span class="number">1698</span>)</span><br><span class="line">... <span class="number">39</span> common frames omitted</span><br><span class="line">Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xuecheng.framewok.domain.course.CourseBase'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xuecheng.framewok.domain.course.CourseBase</span><br><span class="line">at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:<span class="number">120</span>)</span><br><span class="line">at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:<span class="number">92</span>)</span><br><span class="line">at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.loadXmlResource(MapperAnnotationBuilder.java:<span class="number">173</span>)</span><br><span class="line">at org.apache.ibatis.builder.annotation.MapperAnnotationBuilder.parse(MapperAnnotationBuilder.java:<span class="number">124</span>)</span><br><span class="line">at org.apache.ibatis.binding.MapperRegistry.addMapper(MapperRegistry.java:<span class="number">72</span>)</span><br><span class="line">at org.apache.ibatis.session.Configuration.addMapper(Configuration.java:<span class="number">741</span>)</span><br><span class="line">at org.mybatis.spring.mapper.MapperFactoryBean.checkDaoConfig(MapperFactoryBean.java:<span class="number">80</span>)</span><br><span class="line">... <span class="number">42</span> common frames omitted</span><br><span class="line">Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xuecheng.framewok.domain.course.CourseBase'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xuecheng.framewok.domain.course.CourseBase</span><br><span class="line">at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:<span class="number">118</span>)</span><br><span class="line">at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:<span class="number">74</span>)</span><br><span class="line">at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:<span class="number">135</span>)</span><br><span class="line">at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:<span class="number">128</span>)</span><br><span class="line">at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:<span class="number">118</span>)</span><br><span class="line">... <span class="number">48</span> common frames omitted</span><br><span class="line">Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.xuecheng.framewok.domain.course.CourseBase'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.xuecheng.framewok.domain.course.CourseBase</span><br><span class="line">at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:<span class="number">120</span>)</span><br><span class="line">at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:<span class="number">149</span>)</span><br><span class="line">at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:<span class="number">116</span>)</span><br><span class="line">... <span class="number">52</span> common frames omitted</span><br><span class="line">Caused by: java.lang.ClassNotFoundException: Cannot find class: com.xuecheng.framewok.domain.course.CourseBase</span><br><span class="line">at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:<span class="number">200</span>)</span><br><span class="line">at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:<span class="number">89</span>)</span><br><span class="line">at org.apache.ibatis.io.Resources.classForName(Resources.java:<span class="number">261</span>)</span><br><span class="line">at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:<span class="number">116</span>)</span><br><span class="line">... <span class="number">54</span> common frames omitted</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swagger</title>
      <link href="/2019/12/14/Swagger/"/>
      <url>/2019/12/14/Swagger/</url>
      
        <content type="html"><![CDATA[<p><strong>Swagger接口生成工作原理：</strong></p><ul><li>系统启动，扫描到api工程中的Swagger2Configuration类</li><li>在此类中指定了包路径com.xuecheng，找到在此包下及子包下标记有@RestController注解的controller类</li><li>根据controller类中的Swagger注解生成接口文档。</li></ul><a id="more"></a><br><br><p><strong>快速入门</strong></p><p>1.创建Swagger配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xuecheng.api.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.ApiInfoBuilder;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.PathSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.builders.RequestHandlerSelectors;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.service.ApiInfo;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spi.DocumentationType;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.spring.web.plugins.Docket;</span><br><span class="line"><span class="keyword">import</span> springfox.documentation.swagger2.annotations.EnableSwagger2;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger</span>2<span class="comment">//开启Swagger, 加上这个注解之后会自动扫描"com.xuecheng"包下所有的@RestController注解</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Swagger2Configuration</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">createRestApi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                .apis(RequestHandlerSelectors.basePackage(<span class="string">"com.xuecheng"</span>))</span><br><span class="line">                .paths(PathSelectors.any())</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> ApiInfo <span class="title">apiInfo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">                .title(<span class="string">"学成网api文档"</span>)</span><br><span class="line">                .description(<span class="string">"学成网api文档"</span>)</span><br><span class="line">               <span class="comment">//.termsOfServiceUrl("/")</span></span><br><span class="line">                .version(<span class="string">"1.0"</span>)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.接口上声明注解, 方法上也声明注解, 参数也声明注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xuecheng.api.cms;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果接口上有个注解会被Swagger扫描到</span></span><br><span class="line"><span class="meta">@Api</span>(value = <span class="string">"页面管理接口"</span>,description = <span class="string">"cms页面管理接口，提供页面的增、删、改、查"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">CmsPageControllerApi</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ApiOperation</span>(<span class="string">"页面列表分页查询"</span>)</span><br><span class="line">    <span class="meta">@ApiImplicitParams</span>(&#123;</span><br><span class="line">            <span class="meta">@ApiImplicitParam</span>(name = <span class="string">"page"</span>,value = <span class="string">"页码"</span>,required = <span class="keyword">true</span>,paramType = <span class="string">"path"</span>,dataType = <span class="string">"int"</span>),</span><br><span class="line">            <span class="meta">@ApiImplicitParam</span>(name = <span class="string">"size"</span>,value = <span class="string">"每页记录数"</span>,required = <span class="keyword">true</span>,paramType = <span class="string">"path"</span>,dataType = <span class="string">"int"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> QueryResponseResult <span class="title">findList</span><span class="params">(<span class="keyword">int</span> page, <span class="keyword">int</span> size, QueryPageRequest queryPageRequest)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.pojo中声明注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xuecheng.framework.domain.cms.request;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.xuecheng.framework.model.request.RequestData;</span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.ApiModelProperty;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询条件类型</span></span><br><span class="line"><span class="comment"> * 请求类型统一继承RequestData类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QueryPageRequest</span> <span class="keyword">extends</span> <span class="title">RequestData</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 站点id</span></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(<span class="string">"站点id"</span>)</span><br><span class="line">    <span class="keyword">private</span> String siteId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 页面ID</span></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(<span class="string">"页面ID"</span>)</span><br><span class="line">    <span class="keyword">private</span> String pageId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 页面名称</span></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(<span class="string">"页面名称"</span>)</span><br><span class="line">    <span class="keyword">private</span> String pageName;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 别名</span></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(<span class="string">"别名"</span>)</span><br><span class="line">    <span class="keyword">private</span> String pageAliase;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 模版id</span></span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(<span class="string">"模版id"</span>)</span><br><span class="line">    <span class="keyword">private</span> String templateId;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.启动类上面要加上包扫描@ComponentScan(basePackages={“com.xuecheng.api”})</p><p>实际上在启动类上加上@EnableSwagger2注解也可以, 但是没有一些配置了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xuecheng.manage_cms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.domain.EntityScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.ComponentScan;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span><span class="comment">//声明是一个启动类</span></span><br><span class="line"><span class="meta">@EntityScan</span>(<span class="string">"com.xuecheng.framework.domain.cms"</span>)<span class="comment">//扫描实体类</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(basePackages=&#123;<span class="string">"com.xuecheng.api"</span>&#125;)<span class="comment">//扫描接口</span></span><br><span class="line"><span class="meta">@ComponentScan</span>(basePackages=&#123;<span class="string">"com.xuecheng.manage_cms"</span>&#125;)<span class="comment">//扫描本项目下的所有类, 不能省略不写</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ManageCmsApplication</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(ManageCmsApplication<span class="class">.<span class="keyword">class</span>,<span class="title">args</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.测试</p><p>启动cms服务工程，查看接口文档，请求：<a href="http://localhost:31001/swagger-ui.html" target="_blank" rel="noopener">http://localhost:31001/swagger-ui.html</a> </p><blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&gt;server:</span></span><br><span class="line"> <span class="attr">port:</span> <span class="string">$&#123;PORT:31001&#125;</span></span><br><span class="line"><span class="string">&gt;spring:</span></span><br><span class="line"> <span class="attr">application:</span></span><br><span class="line">   <span class="attr">name:</span> <span class="string">xc-service-manage-cms</span></span><br><span class="line"> <span class="attr">data:</span></span><br><span class="line">   <span class="attr">mongodb:</span></span><br><span class="line">     <span class="comment">#uri:  mongodb://root:123@localhost:27017, 我设置的密码是root</span></span><br><span class="line">     <span class="attr">uri:</span> <span class="string">mongodb://root:root@localhost:27017</span></span><br><span class="line">     <span class="attr">database:</span> <span class="string">xc_cms</span></span><br></pre></td></tr></table></figure></blockquote><p>5.Swagger常用注解</p><p>在Java类中添加Swagger的注解即可生成Swagger接口，常用Swagger注解如下：</p><p>@Api：修饰整个类，描述Controller的作用 </p><p>@ApiOperation：描述一个类的一个方法，或者说一个接口 </p><p>@ApiParam：单个参数描述 </p><p>@ApiModel：用对象来接收参数 </p><p>@ApiModelProperty：用对象接收参数时，描述对象的一个字段 </p><p>@ApiResponse：HTTP响应其中1个描述</p><p>@ApiResponses：HTTP响应整体描述 </p><p>@ApiIgnore：使用该注解忽略这个API </p><p>@ApiError ：发生错误返回的信息 </p><p>@ApiImplicitParam：一个请求参数 </p><p>@ApiImplicitParams：多个请求参数 </p><p>@ApiImplicitParam属性： </p><table><thead><tr><th>属性</th><th>取值</th><th>作用</th></tr></thead><tbody><tr><td>paramType</td><td></td><td>查询参数类型</td></tr><tr><td></td><td>path</td><td>以地址的形式提交数据</td></tr><tr><td></td><td>query</td><td>直接跟参数完成自动映射赋值</td></tr><tr><td></td><td>body</td><td>以流的形式提交 仅支持POST</td></tr><tr><td></td><td>header</td><td>参数在request headers 里边提交</td></tr><tr><td></td><td>form</td><td>以form表单的形式提交 仅支持POST</td></tr><tr><td>dataType</td><td></td><td>参数的数据类型 只作为标志说明，并没有实际验证</td></tr><tr><td></td><td>Long</td><td></td></tr><tr><td></td><td>String</td><td></td></tr><tr><td>name</td><td></td><td>接收参数名</td></tr><tr><td>value</td><td></td><td>接收参数的意义描述</td></tr><tr><td>required</td><td></td><td>参数是否必填</td></tr><tr><td></td><td>true</td><td>必填</td></tr><tr><td></td><td>false</td><td>非必填</td></tr><tr><td>defaultValue</td><td></td><td>默认值</td></tr></tbody></table><br><br>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> swagger </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker入门</title>
      <link href="/2019/12/12/Docker/"/>
      <url>/2019/12/12/Docker/</url>
      
        <content type="html"><![CDATA[<p><strong>Docker概述</strong></p><p>Docker是一个开源的应用容器引擎，基于Go语言开发, 是一个运行在Linux上的软件</p><p>Docker作用: 可以直接把测试环境拉取一个镜像完全复制 (将你的应用迁移, 将你的软件运输)</p><a id="more"></a><p>Docker应用场景: </p><ul><li>Web 应用的自动化打包和发布 (制作镜像)</li><li>自动化测试和持续集成、发布 (可持续集成)</li><li>在服务型环境中部署和调整数据库或其他的后台应用 (安装各种组件)</li></ul><p>Docker容器: </p><p>是在操作系统层面上实现虚拟化, 直接<strong>复用本地主机的操作系统</strong>, 而传统虚拟机则是在硬件层面实现虚拟化, 启动速度快, 占用体积小</p><p>Docker组成: Docker守护进程, 仓库, 镜像, 容器, Docker客户端</p><br><br><h2 id="1-Docker安装与启动"><a href="#1-Docker安装与启动" class="headerlink" title="1. Docker安装与启动"></a>1. Docker安装与启动</h2><p><strong>Docker安装</strong></p><p>以下是在CentOS7中安装Docker的步骤:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 0. 首先保证自己电脑的虚拟网卡为NAT模式</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1、yum 包更新到最新 </span></span><br><span class="line">sudo yum update </span><br><span class="line"></span><br><span class="line"><span class="comment"># 2、作用：安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的</span></span><br><span class="line">sudo yum install -y yum-utils device-mapper-persistent-data lvm2 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 3、 设置yum源 </span></span><br><span class="line"><span class="comment"># 3.1、方案一：使用ustc的（推荐） </span></span><br><span class="line">sudo yum-config-manager --add-repo http://mirrors.ustc.edu.cn/docker- ce/linux/centos/docker-ce.repo </span><br><span class="line"><span class="comment"># 3.2、方案二：使用阿里云（可能失败） </span></span><br><span class="line">sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker- ce/linux/centos/docker-ce.repo </span><br><span class="line"></span><br><span class="line"><span class="comment"># 4、 安装docker；出现输入的界面都按 y </span></span><br><span class="line">sudo yum install -y docker-ce</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5、 查看docker版本 </span></span><br><span class="line">docker -v</span><br></pre></td></tr></table></figure><p>*<em>设置ustc镜像 *</em></p><p>因为原来的网速太差, 所以改一下, 编辑文件/etc/docker/daemon.json </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 执行如下命令： </span></span><br><span class="line">mkdir /etc/docker vi /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>在文件中加入下面内容 </p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"registry-mirrors"</span>: [<span class="string">"https://docker.mirrors.ustc.edu.cn"</span>] </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>需求更新yum源和镜像源安装docker；安装之后可以使用 <code>docker -v</code></p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动</span></span><br><span class="line">systemctl start docker</span><br><span class="line"><span class="comment"># 停止</span></span><br><span class="line">systemctl stop docker</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看docker启动状态</span></span><br><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure><p><strong>Docker启动与停止命令</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动docker服务： </span></span><br><span class="line">systemctl start docker </span><br><span class="line"><span class="comment"># 停止docker服务： </span></span><br><span class="line">systemctl stop docker </span><br><span class="line"><span class="comment"># 重启docker服务： </span></span><br><span class="line">systemctl restart docker </span><br><span class="line"><span class="comment"># 查看docker服务状态： </span></span><br><span class="line">systemctl status docker </span><br><span class="line"><span class="comment"># 设置开机启动docker服务： </span></span><br><span class="line">systemctl <span class="built_in">enable</span> docker</span><br></pre></td></tr></table></figure><br><br><p>##2. 镜像相关命令</p><p>*<em>2.1 查看镜像 *</em></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看镜像可以使用如下命令：</span></span><br><span class="line">docker images</span><br></pre></td></tr></table></figure><p>*<em>2.2 搜索镜像 *</em></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果你需要从网络中查找需要的镜像，可以通过以下命令搜索 </span></span><br><span class="line">docker search 镜像名称</span><br></pre></td></tr></table></figure><p>*<em>2.3 拉取镜像 *</em></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取镜像就是从Docker仓库下载镜像到本地，镜像名称格式为 名称:版本号，如果版本号不指定则是最新的版本 命令如下： docker pull 镜像名称 # 如拉取centos 7； </span></span><br><span class="line">docker pull centos:7</span><br></pre></td></tr></table></figure><p>*<em>2.4 删除镜像 *</em></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可以按照镜像id删除镜像，命令如下： </span></span><br><span class="line">docker rmi 镜像id</span><br></pre></td></tr></table></figure><br><br><h2 id="3-查看-amp-创建并启动交互式容器"><a href="#3-查看-amp-创建并启动交互式容器" class="headerlink" title="3. 查看&amp;创建并启动交互式容器"></a>3. 查看&amp;创建并启动交互式容器</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看容器</span></span><br><span class="line">docker ps -a</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建并启动交互式容器</span></span><br><span class="line">docker run -it --name=mycentos7 centos:7 /bin/bash</span><br></pre></td></tr></table></figure><blockquote><p>启动交互式容器之后是直接进入容器终端；可以查看容器的文件结构；使用exit命令则会退出终端并且停止容器。</p></blockquote><br><br><h2 id="4-创建并启动守护式容器"><a href="#4-创建并启动守护式容器" class="headerlink" title="4. 创建并启动守护式容器"></a>4. 创建并启动守护式容器</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建并启动守护式容器</span></span><br><span class="line">docker run -di --name=mycentos2 centos:7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动容器后再进入容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it mycentos2 /bin/bash</span><br></pre></td></tr></table></figure><blockquote><p>守护式容器在启动之后会一直在后台运行，即使进入容器之后执行exit命令也不会停止容器；</p><p>适用于需要长期运行容器的情况</p></blockquote><p> *<em>停止并启动容器 *</em></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 停止正在运行的容器：docker stop 容器名称或者ID </span></span><br><span class="line">docker stop mycentos2 </span><br><span class="line"><span class="comment"># 启动已运行过的容器：docker start 容器名称或者ID </span></span><br><span class="line">docker start mycentos2</span><br></pre></td></tr></table></figure><p><strong>查看容器ip</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在linux宿主机下查看 mycentos2 的ip </span></span><br><span class="line">docker inspect mycentos2</span><br></pre></td></tr></table></figure><p><strong>删除容器</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除容器 </span></span><br><span class="line">docker rm mycentos2</span><br></pre></td></tr></table></figure><br><br><h2 id="5-Docker应用部署-MySQL部署"><a href="#5-Docker应用部署-MySQL部署" class="headerlink" title="5. Docker应用部署-MySQL部署"></a>5. Docker应用部署-MySQL部署</h2><ol><li><p>拉取镜像</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取MySQL 5.7镜像 </span></span><br><span class="line">docker pull centos/mysql-57-centos7</span><br></pre></td></tr></table></figure></li><li><p>创建容器</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建mysql5.7容器 </span></span><br><span class="line">docker run -di --name=mysql5.7 -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root centos/mysql-57-centos7</span><br></pre></td></tr></table></figure><blockquote><p>-p 代表端口映射，格式为 宿主机映射端口:容器运行端口</p></blockquote><blockquote><p>-e 代表添加环境变量 MYSQL_ROOT_PASSWORD 是root用户的远程登陆密码（如果是在容器中使用root登录的话， 那么其密码为空）</p></blockquote></li><li><p>操作容器MySQL </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取MySQL 5.7镜像 </span></span><br><span class="line">docker <span class="built_in">exec</span> -it mysql5.7 /bin/bash </span><br><span class="line"><span class="comment"># 登录容器里面的mysql </span></span><br><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><blockquote><p>在虚拟机登陆时密码为空即可</p></blockquote></li></ol><ol start="4"><li><p>远程登录MySQL </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看ip；如果以后要内部连接该mysql，如其他容器中要连接mysql容器的mysql的时候，可以使用如下命令查看</span></span><br><span class="line">Ip docker inspect mysql5.7</span><br></pre></td></tr></table></figure><p>使用SQLyog/Navicat在windows中进行远程登录在docker容器中的mysql。 </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">主机ip:</span> <span class="string">虚拟机ip</span></span><br><span class="line"><span class="string">端口:</span> <span class="number">3306</span></span><br><span class="line"><span class="string">用户名:</span> <span class="string">root</span></span><br><span class="line"><span class="string">密码:</span> <span class="string">root</span></span><br></pre></td></tr></table></figure></li></ol><br><br><p>6.迁移与备份</p><br><br><p>7.docker-compose</p><br><br><p>8.Dockerfile</p><br><br>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何让百度搜到你的博客</title>
      <link href="/2019/12/05/%E5%A6%82%E4%BD%95%E8%AE%A9%E7%99%BE%E5%BA%A6%E6%90%9C%E5%88%B0%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
      <url>/2019/12/05/%E5%A6%82%E4%BD%95%E8%AE%A9%E7%99%BE%E5%BA%A6%E6%90%9C%E5%88%B0%E4%BD%A0%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<p>百度搜索资源平台可以收录你的博客网址链接，大概需要一两天的时间,   一旦收录之后百度搜索引擎会按照标准处理你的博客以及博文</p><p>百度搜索资源平台:  <a href="https://ziyuan.baidu.com/linksubmit/url" target="_blank" rel="noopener">https://ziyuan.baidu.com/linksubmit/url</a></p><a id="more"></a><br><br><p><strong>1. 首先打开上述网址链接</strong></p><p><img src="../../../../assets/img/img1.png" alt="1"></p><p>进来之后在填写你的博客链接地址</p><p>然后耐心等待即可</p><p>tips: 不一定会被收录,  做好心理准备</p><br><br>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java程序报错问题分析</title>
      <link href="/2019/12/04/Java%E7%A8%8B%E5%BA%8F%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/"/>
      <url>/2019/12/04/Java%E7%A8%8B%E5%BA%8F%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>听说..</p><p>佛曰:  前世五百年的回眸,才换来今生的擦肩而过<br>程序员:  佛祖上辈子我造了碰到了谁?这辈子必须每天都见一次bug<br>佛曰:  尔等没有前生,为后世集福吧  </p><a id="more"></a><p>  <br><br><br></p><p><strong><em>Java程序报错问题分析:</em></strong></p><hr><p>一定要看错误, 根据错误查找问题 !!!</p><p>有错误先找错误, 没错误就使用debug</p><p>当你发现如果所有的其他地方都没有问题的时候,要把那些你认为一定没问题的代码重新怀疑一遍</p><p>雪崩时, 没有一片雪花是无辜的</p><p><br><br><br></p><h4 id="1-1-编译时报错"><a href="#1-1-编译时报错" class="headerlink" title="1.1 编译时报错"></a>1.1 编译时报错</h4><p>编译不通过– 根据控制台 错误找问题</p><p>1) interface ,或者common  层 开发了新的方法,新的接口,但是没有安装 导致编译不通过,可能是其他模块尚未编译,虽然idea预编译时不会报错, 但当进行编译时, maven引入了其他模块的坐标, 而其它模块更改之后并没有重新编译打包, 那么maven引用的还是未修改之前的版本, 重新clear install即可</p><p>2) 代码的某一行导入了 不该导入的包(可能这个包根本就没有用到)</p><p>此时控制台会报告那个类的哪一行可能import了错误的类,找到修改就好了</p><p>3)  pom文件导入报错 </p><p> 我们从PDF 文档中copy  过来的坐标有时候有特殊不可见字符字符 , 碰到这类问题我们要记住: 不要从pdf 中复制坐标,从老师的代码中复制</p><p><br><br><br></p><h4 id="1-2-静态网页报错-效果不显示"><a href="#1-2-静态网页报错-效果不显示" class="headerlink" title="1.2 静态网页报错,效果不显示"></a>1.2 静态网页报错,效果不显示</h4><p>方法1) 根据错误查找原因: 打开开发者模式</p><p>F12是个好东西</p><p>方法2) 二分法</p><p>先删一半代码, 看有没有解决, 没有解决再删一半代码</p><p>如果正常了一定是刚删的代码的问题</p><p>能快速定位错误代码的位置, 节约时间</p><p>  <br><br><br></p><h4 id="1-3-vue-id-not-defined"><a href="#1-3-vue-id-not-defined" class="headerlink" title="1.3 vue id not defined"></a>1.3 vue id not defined</h4><p>var app = new vue(){}    //小写</p><p>var app2 = new Vue(){}</p><p>  <br><br><br></p><h4 id="1-4-ConnectException"><a href="#1-4-ConnectException" class="headerlink" title="1.4 ConnectException"></a>1.4 ConnectException</h4><p>如果服务启动是报错,此时应该根据错误日志定位问题</p><p>找到我们能看懂的关键词</p><p>java.net.ConnectException: Connection refused: no further informatiion</p><p>​    at org.apache.<strong>zookeeper</strong>.ClientcnxnsocketNIO.doTransport</p><p>可能是zookeeper没有启动, 或者启动失败, 重启一下试试</p><p> <br><br><br> </p><h4 id="1-5-404问题"><a href="#1-5-404问题" class="headerlink" title="1.5 404问题"></a>1.5 404问题</h4><p>打开控制台查看请求路径</p><p>确认html路径是否有误,大小写, 空格等</p><p>web-xml是否配置spring-mvc</p><p> web.xml 中拦截路径没有写成写成*.do</p><p>包扫描是否有误</p><p>没有加上@Responsebody注解</p><p>方法上我们使用的是RestController 注解,但是我们看到的却是  Controller 注解</p><p>  <br><br><br></p><h4 id="1-6-空指针异常"><a href="#1-6-空指针异常" class="headerlink" title="1.6 空指针异常"></a>1.6 空指针异常</h4><p>user.getUsername(); 一定是.之前的user为空</p><p>如果是 servcie 对象,可能是没有 @Reference ,或者 @Reference 注解导入包错误了</p><p>如果是 Controller层的参数问题,则有可能是 前端传递的参数和我们Controller 层接收的参数不一致</p><p>  <br><br><br></p><h4 id="1-7-No-provider-available"><a href="#1-7-No-provider-available" class="headerlink" title="1.7 No provider available"></a>1.7 No provider available</h4><p>没有提供者, 服务器端出现问题</p><p>没加@Service(interfaceClass = exampleService.class)</p><p>@Service  注解上是否忘记了 interfaceclass 配置</p><p>unimplemented interface :  exampleService.class是否写错, 复制来的需要更改</p><p>包扫描是否有误</p><p><br><br><br></p><h4 id="1-8-Could-not-find-result-map-com-syx-pojo-User"><a href="#1-8-Could-not-find-result-map-com-syx-pojo-User" class="headerlink" title="1.8 Could not find result map com.syx.pojo.User"></a>1.8 Could not find result map com.syx.pojo.User</h4><p>userMapper映射文件中resultType写成了resultMap</p><p><br><br><br>  </p><h4 id="1-9-集群-分布式和负载均衡"><a href="#1-9-集群-分布式和负载均衡" class="headerlink" title="1.9 集群, 分布式和负载均衡"></a>1.9 集群, 分布式和负载均衡</h4><p>集群：同一个业务，部署在多个服务器上 。集群主要是简单加机器解决问题，对于问题本身不做任何分解； </p><p>主要的使用场景是为了分担请求的压力，也就是在几个服务器上部署相同的应用程序，来分担客户端请求。 </p><p>分布式：一个业务拆分为多个子业务，部署在多个服务器上 。</p><p>将一套系统拆分成不同子系统部署在不同服务器上（这叫分布式），然后部署多个相同的子系统在不同的服务器上（这叫集群），部署在不同服务器上的同一个子系统应做负载均衡。 </p><p>负载均衡（Load Balance）：其实就是将请求分摊到多个操作单元上进行执行，从而共同完成工作任务。</p><p>在集群负载均衡时，Dubbo 提供了多种均衡策略（包括随机、轮询、最少活跃调用数、一致性Hash），缺省为random随机调用。</p><p>配置负载均衡策略，既可以在服务提供者一方配置，也可以在服务消费者一方配置，如下:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/demo"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloController</span> </span>&#123;</span><br><span class="line">    <span class="comment">//在服务消费者一方配置负载均衡策略</span></span><br><span class="line">    <span class="meta">@Reference</span>(check = <span class="keyword">false</span>,loadbalance = <span class="string">"random"</span>)</span><br><span class="line">    <span class="keyword">private</span> HelloService helloService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/hello"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="comment">//远程调用</span></span><br><span class="line">        String result = helloService.sayHello(name);</span><br><span class="line">        System.out.println(result);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在服务提供者一方配置负载均衡</span></span><br><span class="line"><span class="meta">@Service</span>(loadbalance = <span class="string">"random"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServiceImpl</span> <span class="keyword">implements</span> <span class="title">HelloService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">sayHello</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"hello "</span> + name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以通过启动多个服务提供者来观察Dubbo负载均衡效果。</p><p>注意：因为我们是在一台机器上启动多个服务提供者，所以需要修改tomcat的端口号和Dubbo服务的端口号来防止端口冲突。</p><p>在实际生产环境中，多个服务提供者是分别部署在不同的机器上，所以不存在端口冲突问题。</p><p><br><br><br></p>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客添加音乐插件</title>
      <link href="/2019/12/03/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90%E6%8F%92%E4%BB%B6/"/>
      <url>/2019/12/03/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>此次集成的音乐插件是网易云官方插件, 博客为yilia主题, 为自己的博客添加一曲优美动听的背景音乐</p><p><a href="https://music.163.com/" target="_blank" rel="noopener">网易云音乐: https://music.163.com/ </a></p><a id="more"></a><p><br><br></p><p><strong>1. 首先打开网易云音乐, 选择一首可以生成外链的歌曲,  例如这首: *wonderful tonight（Cover：方大同）</strong></p><hr><p><img src="http://q1i2sunf7.bkt.clouddn.com/Snipaste_2019-12-03_21-07-02.png" alt="图片1">  </p><p><br><br></p><p><strong>2. 点击生成外链播放器, 注意有些歌曲会有版权的限制</strong></p><p><img src="http://q1i2sunf7.bkt.clouddn.com/Snipaste_2019-12-03_21-18-08.png" alt="图片2"></p><p>网易云为我们提供了iframe插件和flash插件共我们选择, 选择其中一种即可, 此处选择iframe插件</p><p>选择尺寸默认即可</p><p>播放模式: 自动播放  </p><br><br><p><strong>3. 复制生成外链接下的HTML代码</strong></p><hr><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">marginheight</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">330</span> <span class="attr">height</span>=<span class="string">86</span> <span class="attr">src</span>=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=1347027595&amp;auto=1&amp;height=66"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br><p><br><br></p><p><strong>4. 打开yilia主题下的themes\yilia\layout_partial文件夹下的left-col.ejs文件</strong></p><hr><p>在下面代码中:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"header-nav"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"social"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">for</span> (<span class="attr">var</span> <span class="attr">i</span> <span class="attr">in</span> <span class="attr">theme.subnav</span>)&#123; %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"&lt;%= i %&gt;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">"&lt;%- url_for(theme.subnav[i]) %&gt;"</span> <span class="attr">title</span>=<span class="string">"&lt;%= i %&gt;"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"icon-&lt;%= i %&gt;"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> </span><br><span class="line">         <span class="tag">&lt;<span class="name">%&#125;%</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><p>插入如下代码:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 网易云音乐插件 --&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.music</span> &amp;&amp; <span class="attr">theme.music.enable</span>)&#123; %&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position:absolute; bottom:120px left:auto; width:85%"</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">marginheight</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">"240"</span> <span class="attr">height</span>=<span class="string">"52"</span> <span class="attr">src</span>=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=1347027595&amp;&gt;&amp;auto=&lt;%=theme.music.autoplay?1:0%&gt;&amp;height=32"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br></pre></td></tr></table></figure><p>插入之后:</p><p>插入时注意因为我加了一句中文注释 (如果不想加的话可以直接删除该注释), 可能会出现乱码问题, 可以把全文选中之后, 剪切, 更改编码方式为utf-8, 之后把原文粘贴上去即可</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">nav</span> <span class="attr">class</span>=<span class="string">"header-nav"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"social"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">for</span> (<span class="attr">var</span> <span class="attr">i</span> <span class="attr">in</span> <span class="attr">theme.subnav</span>)&#123; %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"&lt;%= i %&gt;"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">href</span>=<span class="string">"&lt;%- url_for(theme.subnav[i]) %&gt;"</span> <span class="attr">title</span>=<span class="string">"&lt;%= i %&gt;"</span>&gt;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"icon-&lt;%= i %&gt;"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%&#125;%</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 网易云音乐插件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.music</span> &amp;&amp; <span class="attr">theme.music.enable</span>)&#123; %&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position:absolute; bottom:120px left:auto; width:85%"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">"no"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">marginwidth</span>=<span class="string">"0"</span> <span class="attr">marginheight</span>=<span class="string">"0"</span> <span class="attr">width</span>=<span class="string">"240"</span> <span class="attr">height</span>=<span class="string">"52"</span> <span class="attr">src</span>=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=1347027595&amp;&gt;&amp;auto=&lt;%=theme.music.autoplay?1:0%&gt;&amp;height=32"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我在此处加入了一些样式上的修改, 如果不喜欢的话也可以直接把音乐外链接生成的HTML代码直接放到合适的位置即可 </p><p>效果如图: </p><p><img src="http://q1i2sunf7.bkt.clouddn.com/Snipaste_2019-12-03_21-35-02.png" alt="图片3"></p><br><br><p><strong>5. 打开yilia主题下的themes\yilia\文件夹下的_config.yml文件</strong></p><hr><p>修改如下配置:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 网易云音乐插件</span></span><br><span class="line"><span class="attr">music:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># 网易云分享的ID</span></span><br><span class="line">  <span class="attr">id:</span> <span class="number">1077408</span></span><br><span class="line">  <span class="attr">autoplay:</span> <span class="literal">false</span>  </span><br><span class="line">  <span class="comment"># 是否开启自动播放</span></span><br></pre></td></tr></table></figure><p>以上就完成了yilia主题集成网易云音乐的播放插件  </p><br><br>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记承天寺夜游</title>
      <link href="/2019/12/02/%E8%AE%B0%E6%89%BF%E5%A4%A9%E5%AF%BA%E5%A4%9C%E6%B8%B8/"/>
      <url>/2019/12/02/%E8%AE%B0%E6%89%BF%E5%A4%A9%E5%AF%BA%E5%A4%9C%E6%B8%B8/</url>
      
        <content type="html"><![CDATA[<p><a href="https://so.gushiwen.org/shiwen/default.aspx?cstr=%e5%ae%8b%e4%bb%a3" target="_blank" rel="noopener">宋代</a>：<a href="https://baike.baidu.com/item/%E8%8B%8F%E8%BD%BC/53906?fr=aladdin" target="_blank" rel="noopener">苏轼</a></p><p>　　元丰六年十月十二日夜，解衣欲睡，月色入户，欣然起行。念无与为乐者，遂至承天寺寻张怀民。怀民亦未寝，相与步于中庭。庭下如积水空明，水中藻、荇交横，盖竹柏影也。何夜无月？何处无竹柏？但少闲人如吾两人者耳。</p><a id="more"></a><p>《记承天寺夜游》是宋代文学家<a href="https://baike.baidu.com/item/%E8%8B%8F%E8%BD%BC/53906" target="_blank" rel="noopener">苏轼</a>创作的一篇<a href="https://baike.baidu.com/item/%E5%8F%A4%E6%96%87/1591397" target="_blank" rel="noopener">古文</a>。文章对月夜景色作了美妙描绘，真实地记录了作者被贬黄州的一个生活片段，也体现了他与<a href="https://baike.baidu.com/item/%E5%BC%A0%E6%80%80%E6%B0%91/4925868" target="_blank" rel="noopener">张怀民</a>的深厚友谊与对知音甚少的无限感慨，同时表达了他壮志难酬的苦闷及自我排遣，表现了他旷达乐观的人生态度。全文情感真挚，言简义丰，起于当起，止于当止，如行云流水，一气呵成。 </p>]]></content>
      
      
      
        <tags>
            
            <tag> poem </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/11/19/hello-world/"/>
      <url>/2019/11/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p> 欢迎来到我的博客！这是我的第一篇博文。点击查看<a href="https://shiyongxu.github.io/archives/">归档</a>可以查看更多文章。如果您在访问我的博客时遇到任何问题，可以憋在心里，也可以在GitHub上询问我。 </p><p>我的GitHub:     <a href="https://github.com/shiyongxu" target="_blank" rel="noopener">https://github.com/shiyongxu</a></p><a id="more"></a> <br><h3 id="1-Create-a-new-post"><a href="#1-Create-a-new-post" class="headerlink" title="1. Create a new post"></a>1. Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><br><br><h3 id="2-Run-server"><a href="#2-Run-server" class="headerlink" title="2. Run server"></a>2. Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><br><br><h3 id="3-Generate-static-files"><a href="#3-Generate-static-files" class="headerlink" title="3. Generate static files"></a>3. Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><br><br><h3 id="4-Deploy-to-remote-sites"><a href="#4-Deploy-to-remote-sites" class="headerlink" title="4. Deploy to remote sites"></a>4. Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><br><br>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
